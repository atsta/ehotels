{
  "_args": [
    [
      {
        "raw": "semantic-ui-calendar",
        "scope": null,
        "escapedName": "semantic-ui-calendar",
        "name": "semantic-ui-calendar",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/home/christos/devilbox/data/www/myproject/htdocs"
    ]
  ],
  "_from": "semantic-ui-calendar@latest",
  "_id": "semantic-ui-calendar@0.0.8",
  "_inCache": true,
  "_location": "/semantic-ui-calendar",
  "_nodeVersion": "6.8.1",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/semantic-ui-calendar-0.0.8.tgz_1491699770822_0.03475331701338291"
  },
  "_npmUser": {
    "name": "mdehoog",
    "email": "michael@critik.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "semantic-ui-calendar",
    "scope": null,
    "escapedName": "semantic-ui-calendar",
    "name": "semantic-ui-calendar",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/semantic-ui-calendar/-/semantic-ui-calendar-0.0.8.tgz",
  "_shasum": "ae16504e4d8016cac5ba9a00ad8ccd4a430de3ef",
  "_shrinkwrap": null,
  "_spec": "semantic-ui-calendar",
  "_where": "/home/christos/devilbox/data/www/myproject/htdocs",
  "author": {
    "name": "Michael de Hoog",
    "url": "https://github.com/mdehoog/"
  },
  "bugs": {
    "url": "https://github.com/mdehoog/semantic-ui-calendar/issues"
  },
  "dependencies": {},
  "description": "Calendar module for Semantic UI",
  "devDependencies": {
    "gulp": "^3.9.1",
    "gulp-autoprefixer": "^3.1.1",
    "gulp-clean-css": "^2.0.13",
    "gulp-clone": "^1.0.0",
    "gulp-flatten": "^0.3.1",
    "gulp-less": "^3.1.0",
    "gulp-rename": "^1.2.2",
    "gulp-replace": "^0.5.4",
    "gulp-uglify": "^2.0.0",
    "require-dot-file": "^0.4.0",
    "semantic-ui-less": "^2.2.4"
  },
  "directories": {},
  "dist": {
    "shasum": "ae16504e4d8016cac5ba9a00ad8ccd4a430de3ef",
    "tarball": "https://registry.npmjs.org/semantic-ui-calendar/-/semantic-ui-calendar-0.0.8.tgz"
  },
  "gitHead": "930d05ce0150c1fb04757dac82c0758a66419aca",
  "homepage": "https://github.com/mdehoog/semantic-ui-calendar#readme",
  "license": "MIT",
  "maintainers": [
    {
      "name": "mdehoog",
      "email": "michael@critik.com"
    }
  ],
  "name": "semantic-ui-calendar",
  "optionalDependencies": {},
  "readme": "# Semantic-UI-Calendar\n\nCalendar module for Semantic UI. See https://jsbin.com/ruqakehefa/ for example usage.\n\nThis was originally a PR for Semantic UI: https://github.com/Semantic-Org/Semantic-UI/pull/3256.\n\n## Installation\n\nInstall using bower:\n\n```\nbower install --save semantic-ui-calendar\n```\n\nInstall using npm:\n\n```\nnpm install --save semantic-ui-calendar\n```\n\nInclude javascript and css in html:\n\n```html\n<script type=\"text/javascript\" src=\"/bower_components/semantic-ui-calendar/dist/calendar.min.js\"></script>\n<link rel=\"stylesheet\" href=\"/bower_components/semantic-ui-calendar/dist/calendar.min.css\" />\n```\n\n## Compiling CSS from LESS\n\nIf you want to theme the calendar, or change some of the variables from the default theme, you can compile the LESS source using your favourite build tool.\n\nImport the calendar.less file into your app.\n\n```less\n@import 'definitions/modules/calendar';\n```\n\nEnsure that this module's `src` directory is included when compiling the LESS:\n\n```javascript\n  lessOptions: {\n    paths: [\n      'bower_components/semantic-ui-calendar/src',\n      ...\n    ]\n  }\n```\n\n## Behavior\n\nThese functions can be called the same way you call Semantic UI behavior functions:\n\n```javascript\n$('#mycalendar').calendar('behavior name', argumentOne, argumentTwo);\n```\n\nBehavior | Description\n--- | ---\n`refresh` | Refresh the calendar.\n`popup(arguments)` | Call the popup module (e.g. passing 'show' will show the calendar popup).\n`focus` | Focus the calendar input.\n`blur` | Blur the calendar input.\n`clear` | Clear the selected date.\n`get date` | Get the selected date.\n`set date(date, updateInput = true, fireChange = true)` | Set the selected date. Pass `false` to `updateInput` to disable updating the input. Pass `false` to `fireChange` to disable the `onChange` callback for this change.\n`get mode` | Get the current selection mode (`year`, `month`, `day`, `hour`, `minute`).\n`set mode(mode)` | Set the current selection mode (`year`, `month`, `day`, `hour`, `minute`).\n`get startDate` | Get the start date for range selection.\n`set startDate(date)` | Set the start date for range selection.\n`get endDate` | Get the end date for range selection.\n`set endDate(date)` | Set the end date for range selection.\n`get focusDate` | Get the currently focused date.\n`set focusDate(date)` | Set the currently focused date.\n\n## Settings\n\nThe following settings are supported by this module:\n\n```javascript\n    type: 'datetime',     // picker type, can be 'datetime', 'date', 'time', 'month', or 'year'\n    firstDayOfWeek: 0,    // day for first day column (0 = Sunday)\n    constantHeight: true, // add rows to shorter months to keep day calendar height consistent (6 rows)\n    today: false,         // show a 'today/now' button at the bottom of the calendar\n    closable: true,       // close the popup after selecting a date/time\n    monthFirst: true,     // month before day when parsing/converting date from/to text\n    touchReadonly: true,  // set input to readonly on touch devices\n    inline: false,        // create the calendar inline instead of inside a popup\n    on: null,             // when to show the popup (defaults to 'focus' for input, 'click' for others)\n    initialDate: null,    // date to display initially when no date is selected (null = now)\n    startMode: false,     // display mode to start in, can be 'year', 'month', 'day', 'hour', 'minute' (false = 'day')\n    minDate: null,        // minimum date/time that can be selected, dates/times before are disabled\n    maxDate: null,        // maximum date/time that can be selected, dates/times after are disabled\n    ampm: true,           // show am/pm in time mode\n    disableYear: false,   // disable year selection mode\n    disableMonth: false,  // disable month selection mode\n    disableMinute: false, // disable minute selection mode\n    formatInput: true,    // format the input text upon input blur and module creation\n    startCalendar: null,  // jquery object or selector for another calendar that represents the start date of a date range\n    endCalendar: null,    // jquery object or selector for another calendar that represents the end date of a date range\n    multiMonth: 1,        // show multiple months when in 'day' mode\n\n    // popup options ('popup', 'on', 'hoverable', and show/hide callbacks are overridden)\n    popupOptions: {\n      position: 'bottom left',\n      lastResort: 'bottom left',\n      prefer: 'opposite',\n      hideOnScroll: false\n    },\n\n    text: {\n      days: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n      months: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n      monthsShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n      today: 'Today',\n      now: 'Now',\n      am: 'AM',\n      pm: 'PM'\n    },\n\n    formatter: {\n      header: function (date, mode, settings) {\n        //return a string to show on the header for the given 'date' and 'mode'\n      },\n      yearHeader: function (date, settings) {\n        //return a string to show on the header for the given 'date' in year mode\n      },\n      monthHeader: function (date, settings) {\n        //return a string to show on the header for the given 'date' in month mode\n      },\n      dayHeader: function (date, settings) {\n        //return a string to show on the header for the given 'date' in day mode\n      },\n      hourHeader: function (date, settings) {\n        //return a string to show on the header for the given 'date' in hour mode\n      },\n      minuteHeader: function (date, settings) {\n        //return a string to show on the header for the given 'date' in minute mode\n      },\n      dayColumnHeader: function (day, settings) {\n        //return a abbreviated day string to show above each column in day mode\n      },\n      datetime: function (date, settings) {\n        //return a formatted string representing the date & time of 'date'\n      },\n      date: function (date, settings) {\n        //return a formatted string representing the date of 'date'\n      },\n      time: function (date, settings, forCalendar) {\n        //return a formatted string representing the time of 'date'\n      },\n      today: function (settings) {\n        return settings.type === 'date' ? settings.text.today : settings.text.now;\n      },\n      cell: function (cell, date, cellOptions) {\n        //customize the calendar cell, cellOptions is:\n        //{ mode: string, adjacent: boolean, disabled: boolean, active: boolean, today: boolean }\n      }\n    },\n\n    parser: {\n      date: function (text, settings) {\n        //return a date parsed from 'text'\n      }\n    },\n\n    // callback when date changes, return false to cancel the change\n    onChange: function (date, text, mode) {\n    },\n\n    // callback before show animation, return false to prevent show\n    onShow: function () {\n    },\n\n    // callback after show animation\n    onVisible: function () {\n    },\n\n    // callback before hide animation, return false to prevent hide\n    onHide: function () {\n    },\n\n    // callback after hide animation\n    onHidden: function () {\n    },\n\n    // is the given date disabled?\n    isDisabled: function (date, mode) {\n      return false;\n    },\n\n    selector: {\n      popup: '.ui.popup',\n      input: 'input',\n      activator: 'input'\n    },\n\n    regExp: {\n      dateWords: /[^A-Za-z\\u00C0-\\u024F]+/g,\n      dateNumbers: /[^\\d:]+/g\n    },\n\n    error: {\n      popup: 'UI Popup, a required component is not included in this page',\n      method: 'The method you called is not defined.'\n    },\n\n    className: {\n      calendar: 'calendar',\n      active: 'active',\n      popup: 'ui popup',\n      grid: 'ui equal width grid',\n      column: 'column',\n      table: 'ui celled center aligned unstackable table',\n      prev: 'prev link',\n      next: 'next link',\n      prevIcon: 'chevron left icon',\n      nextIcon: 'chevron right icon',\n      link: 'link',\n      cell: 'link',\n      disabledCell: 'disabled',\n      adjacentCell: 'adjacent',\n      activeCell: 'active',\n      rangeCell: 'range',\n      focusCell: 'focus',\n      todayCell: 'today',\n      today: 'today link'\n    },\n\n    metadata: {\n      date: 'date',\n      focusDate: 'focusDate',\n      startDate: 'startDate',\n      endDate: 'endDate',\n      mode: 'mode',\n      monthOffset: 'monthOffset'\n    }\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mdehoog/semantic-ui-calendar.git"
  },
  "scripts": {},
  "version": "0.0.8"
}
